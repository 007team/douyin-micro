// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userModels.protos

package services

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/protos"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the protos package it is being compiled against.
// A compilation error at this line likely means your copy of the
// protos package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the protos package

type UserModel struct {
	// @inject_tag: json:"id"
	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	// @inject_tag: json:"follow_count"
	FollowCount int64 `protobuf:"varint,3,opt,name=FollowCount,proto3" json:"FollowCount,omitempty"`
	// @inject_tag: json:"follower_count"
	FollowerCount int64 `protobuf:"varint,4,opt,name=FollowerCount,proto3" json:"FollowerCount,omitempty"`
	// @inject_tag: json:"password"
	Password string `protobuf:"bytes,5,opt,name=Password,proto3" json:"Password,omitempty"`
	// @inject_tag: json:"is_follow"
	IsFollow bool `protobuf:"varint,6,opt,name=IsFollow,proto3" json:"IsFollow,omitempty"`
	// @inject_tag: json:"salt"
	Salt string `protobuf:"bytes,7,opt,name=Salt,proto3" json:"Salt,omitempty"`
	// @inject_tag: json:"created_at"
	CreatedAt int64 `protobuf:"varint,8,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	// @inject_tag: json:"updated_at"
	UpdatedAt            int64    `protobuf:"varint,9,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserModel) Reset()         { *m = UserModel{} }
func (m *UserModel) String() string { return proto.CompactTextString(m) }
func (*UserModel) ProtoMessage()    {}
func (*UserModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab4681ca824f7c7a, []int{0}
}

func (m *UserModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserModel.Unmarshal(m, b)
}
func (m *UserModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserModel.Marshal(b, m, deterministic)
}
func (m *UserModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserModel.Merge(m, src)
}
func (m *UserModel) XXX_Size() int {
	return xxx_messageInfo_UserModel.Size(m)
}
func (m *UserModel) XXX_DiscardUnknown() {
	xxx_messageInfo_UserModel.DiscardUnknown(m)
}

var xxx_messageInfo_UserModel proto.InternalMessageInfo

func (m *UserModel) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserModel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserModel) GetFollowCount() int64 {
	if m != nil {
		return m.FollowCount
	}
	return 0
}

func (m *UserModel) GetFollowerCount() int64 {
	if m != nil {
		return m.FollowerCount
	}
	return 0
}

func (m *UserModel) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserModel) GetIsFollow() bool {
	if m != nil {
		return m.IsFollow
	}
	return false
}

func (m *UserModel) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

func (m *UserModel) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *UserModel) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func init() {
	proto.RegisterType((*UserModel)(nil), "services.UserModel")
}

func init() { proto.RegisterFile("userModels.protos", fileDescriptor_ab4681ca824f7c7a) }

var fileDescriptor_ab4681ca824f7c7a = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x31, 0x4b, 0x04, 0x31,
	0x10, 0x85, 0xc9, 0xde, 0x79, 0x26, 0x73, 0x28, 0x32, 0x55, 0x10, 0x8b, 0x20, 0x16, 0x5b, 0x9d,
	0x85, 0xa5, 0x95, 0x1e, 0x08, 0x5b, 0x28, 0xb2, 0x72, 0x8d, 0x5d, 0x34, 0x53, 0x08, 0xd1, 0x2c,
	0x99, 0xac, 0xfb, 0xf3, 0x95, 0x24, 0xba, 0x7a, 0x55, 0xe6, 0xbd, 0xef, 0x23, 0x19, 0x02, 0x27,
	0x23, 0x53, 0xbc, 0x0f, 0x8e, 0x3c, 0x6f, 0x86, 0x18, 0x52, 0x40, 0xc9, 0x14, 0x3f, 0xdf, 0x5e,
	0x89, 0xcf, 0xbf, 0x04, 0xa8, 0xdd, 0x2f, 0xc6, 0x63, 0x68, 0x3a, 0xa7, 0x85, 0x11, 0xed, 0xa2,
	0x6f, 0x3a, 0x87, 0x08, 0xcb, 0x07, 0xfb, 0x4e, 0xba, 0x31, 0xa2, 0x55, 0x7d, 0x99, 0xd1, 0xc0,
	0xfa, 0x2e, 0x78, 0x1f, 0xa6, 0x6d, 0x18, 0x3f, 0x92, 0x5e, 0x14, 0xf9, 0x7f, 0x85, 0x17, 0x70,
	0x54, 0x23, 0xc5, 0xea, 0x2c, 0x8b, 0xb3, 0x5f, 0xe2, 0x29, 0xc8, 0x47, 0xcb, 0x3c, 0x85, 0xe8,
	0xf4, 0x41, 0xb9, 0x7f, 0xce, 0x99, 0x75, 0x5c, 0x75, 0xbd, 0x32, 0xa2, 0x95, 0xfd, 0x9c, 0xf3,
	0x4e, 0x4f, 0xd6, 0x27, 0x7d, 0x58, 0x77, 0xca, 0x33, 0x9e, 0x81, 0xda, 0x46, 0xb2, 0x89, 0xdc,
	0x4d, 0xd2, 0xb2, 0xbc, 0xf6, 0x57, 0x64, 0xba, 0x1b, 0xdc, 0x0f, 0x55, 0x95, 0xce, 0xc5, 0xed,
	0xfa, 0x59, 0x6d, 0x2e, 0xaf, 0xcb, 0xbf, 0xf0, 0xcb, 0xaa, 0x9c, 0x57, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xf5, 0x9b, 0x47, 0x61, 0x33, 0x01, 0x00, 0x00,
}
