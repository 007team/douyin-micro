syntax="proto3";
package services;
import "videoModels.proto";
option go_package="./;protos";

/*
  Feed
 */
message VideoFeedRequest {
  // @inject_tag: json:"latest_time"
  int64 latest_time =1;
  // @inject_tag: json:"token"
  string token =2;
}
message VideoFeedResponse {
  // @inject_tag: json:"status_code"
  int32 status_code = 1;
  // @inject_tag: json:"status_msg"
  string status_msg = 2;
  // @inject_tag: json:"video_list"
  repeated Video video_list = 3;
  // @inject_tag: json:"next_time"
  int64 next_time = 4;
}


/*
  PublishAction
 */
message VideoPublishActionRequest {
  // @inject_tag: json:"user_id"
  int64 user_id =1;
  // @inject_tag: json:"data"
  Video video =2;
}
message VideoPublishActionResponse {
  // @inject_tag: json:"status_code"
  int32 status_code = 1;
  // @inject_tag: json:"status_msg"
  string status_msg = 2;
}

/*
  PublishList
 */
message VideoPublishListRequest {
  // @inject_tag: json:"user_id"
  int64 user_id = 1;
  // @inject_tag: json:"token"
  string token =2;
}
message VideoPublishListResponse {
  // @inject_tag: json:"status_code"
  int32 status_code = 1;
  // @inject_tag: json:"status_msg"
  string status_msg = 2;
  // @inject_tag: json:"video_list"
  repeated Video video_list = 3;
}

/*
  FavoriteAction
 */
message VideoFavoriteActionRequest {
  // @inject_tag: json:"user_id"
  int64 user_id = 1;
  // @inject_tag: json:"token"
  string token = 2;
  // @inject_tag: json:"video_id"
  int64 video_id = 3;
  // @inject_tag: json:"action_type"
  int32 action_type =4;
}
message VideoFavoriteActionResponse {
  // @inject_tag: json:"status_code"
  int32 status_code = 1;
  // @inject_tag: json:"status_msg"
  string status_msg = 2;
}

/*
  FavoriteList
 */
message VideoFavoriteListRequest {
  // @inject_tag: json:"user_id"
  int64 user_id = 1;
  // @inject_tag: json:"token"
  string token =2;
}
message VideoFavoriteListResponse {
  // @inject_tag: json:"status_code"
  int32 status_code = 1;
  // @inject_tag: json:"status_msg"
  string status_msg = 2;
  // @inject_tag: json:"video_list"
  repeated Video video_list =3;
}

service VideoService{
  rpc Feed(VideoFeedRequest) returns (VideoFeedResponse);
  rpc PublishAction(VideoPublishActionRequest) returns (VideoPublishActionResponse);
  rpc PublishList(VideoPublishListRequest) returns (VideoPublishListResponse);
  rpc FavoriteAction(VideoFavoriteActionRequest) returns (VideoFavoriteActionResponse);
  rpc FavoriteList(VideoFavoriteListRequest) returns (VideoFavoriteListResponse);
}